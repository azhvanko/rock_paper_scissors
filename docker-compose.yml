version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
      args:
        user: "${WS_CONTAINER_USER}"
        password: "${WS_CONTAINER_USER_PASSWORD}"
    restart: unless-stopped
    image: battle_app:latest
    container_name: battle_app
    entrypoint: [
      "/bin/bash",
      "./docker/app/wait-for-postgres.sh"
    ]
    command: ["python", "-m", "app"]
    env_file:
      - ./.env
    networks:
      - battle_app
    ports:
      - "127.0.0.1:8899:${BATTLE_WS_PORT}"
    volumes:
      - .:/usr/src/app:z
    depends_on:
      - postgres
  postgres:
    build:
      context: ./docker/postgres
      dockerfile: ./Dockerfile
    restart: unless-stopped
    image: battle_postgres:latest
    container_name: battle_postgres
    env_file:
      - ./.env
    networks:
      - battle_app
    ports:
      - "127.0.0.1:5454:${DB_PORT}"
    volumes:
      - battle_postgres:/var/lib/postgresql/data
    healthcheck:
      test: [
        "CMD", "pg_isready",
        "-U", "${DB_USER}",
        "-d", "${DB_NAME}",
        "-p", "${DB_PORT}"
      ]
      interval: 60s
      timeout: 3s
      start_period: 30s
      retries: 5

networks:
  battle_app:
    name: battle_app
    driver: bridge

volumes:
  battle_postgres:
    name: battle_postgres
